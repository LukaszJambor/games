version: "3.7"
services:
  import-app:
    build: D:\project\data_import_new_repo\app
    container_name: import-app
    links:
      - main-app
    ports:
      - "9091:9091"
    networks:
      - database-network
      - kafka-network
    depends_on:
      - main-app
    tty: true
    volumes:
      - //d/test:/test
  main-app:
    build: main/
    container_name: main-app
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    links:
      - docker-mysql
    ports:
      - "9081:9081"
      - "9080:9080"
# outside:inside
    networks:
      - database-network
      - kafka-network
    depends_on:
      - docker-mysql
    tty: true
  docker-mysql:
    image: pitchanon/docker-mysql
    container_name: docker-mysql
    ports:
      - "6603:3306"
    networks:
      - database-network
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_PASSWORD: "root"
      MYSQL_DATABASE: "db1"
    tty: true
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - kafka-network
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-network
networks:
  database-network: {}
  kafka-network: {}